# -*- coding: utf-8 -*-
# app.py

import os 
# –î–æ–±–∞–≤–ª—è–µ–º login_required, current_user, LoginManager
from flask import Flask, render_template, request, redirect, url_for, flash 
from flask_sqlalchemy import SQLAlchemy 
from flask_login import LoginManager, UserMixin, login_user, login_required, logout_user, current_user # <-- –ù–û–í–´–ï –ò–ú–ü–û–†–¢–´

# 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –∑–∞—â–∏—Ç—ã —Å–µ—Å—Å–∏–π (–û–ß–ï–ù–¨ –í–ê–ñ–ù–û)
app.config['SECRET_KEY'] = 'rjlh5n-8mflk8gj4345.f5n78gkj94-,nff' # <-- –ù–û–í–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LoginManager
login_manager = LoginManager()
login_manager.init_app(app)

# –ö—É–¥–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
login_manager.login_view = 'login' 
# –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—è–≤–∏—Ç—Å—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–π—Ç–∏ –±–µ–∑ –ª–æ–≥–∏–Ω–∞
login_manager.login_message = '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è DATABASE_URL, –∫–æ—Ç–æ—Ä—É—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç Render
DATABASE_URL = os.environ.get('DATABASE_URL') 

if DATABASE_URL:
    # –ï—Å–ª–∏ –º—ã –Ω–∞ Render, –∏—Å–ø–æ–ª—å–∑—É–µ–º PostgreSQL
    # 'postgres://' –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ 'postgresql+psycopg2://' –¥–ª—è SQLAlchemy
    if DATABASE_URL.startswith("postgres://"):
        DATABASE_URL = DATABASE_URL.replace("postgres://", "postgresql+psycopg2://", 1)
    app.config['SQLALCHEMY_DATABASE_URI'] = DATABASE_URL
else:
    # –ï—Å–ª–∏ –º—ã –Ω–∞ –≤–∞—à–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º SQLite
    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///residents.db'

# –û—Ç–∫–ª—é—á–∞–µ–º –Ω–µ–Ω—É–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = SQLAlchemy(app)

# app.py

# 3. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–¥–µ–ª—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
# UserMixin –¥–∞–µ—Ç –Ω–∞–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã Flask-Login
class User(db.Model, UserMixin): 
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password_hash = db.Column(db.String(120), nullable=False) # –ë—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å —Ö–µ—à –ø–∞—Ä–æ–ª—è, –∞ –Ω–µ —Å–∞–º –ø–∞—Ä–æ–ª—å

    def __repr__(self):
        return f'<User: {self.username}>'

# –§—É–Ω–∫—Ü–∏—è-–∑–∞–≥—Ä—É–∑—á–∏–∫, –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è Flask-Login
# –ì–æ–≤–æ—Ä–∏—Ç, –∫–∞–∫ –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))

# 3.1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç "–ñ–∏–ª–µ—Ü" (–ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã)
class Resident(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    apartment_number = db.Column(db.String(10), unique=True, nullable=False)
    contact = db.Column(db.String(120), nullable=True)

    def __repr__(self):
        return f'<–ñ–∏–ª–µ—Ü: {self.name}, –ö–≤–∞—Ä—Ç–∏—Ä–∞: {self.apartment_number}>'


# 4. –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (http://127.0.0.1:5000/)
@app.route('/')
def index():
    # –ü–æ–ª—É—á–∞–µ–º –í–°–ï–• –∂–∏–ª—å—Ü–æ–≤ –∏–∑ –±–∞–∑—ã
    all_residents = Resident.query.all()
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —à–∞–±–ª–æ–Ω index.html
    return render_template('index.html', –∂–∏–ª—å—Ü—ã=all_residents) 


# 5. –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∂–∏–ª—å—Ü–æ–≤
@app.route('/add', methods=['GET', 'POST'])
@login_required # <-- –î–û–ë–ê–í–õ–Ø–ï–ú –≠–¢–£ –°–¢–†–û–ö–£: —Ç—Ä–µ–±—É–µ—Ç –ª–æ–≥–∏–Ω–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞!
def add_resident():
    if request.method == 'POST':
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—à–ª–∏ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É (POST)
        name_data = request.form.get('name')
        apt_data = request.form.get('apartment_number')
        contact_data = request.form.get('contact')
        
        # –°–æ–∑–¥–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–≥–æ –∂–∏–ª—å—Ü–∞
        new_resident = Resident(
            name=name_data,
            apartment_number=apt_data,
            contact=contact_data
        )
        db.session.add(new_resident)
        db.session.commit()
        
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (index)
        return redirect(url_for('index'))
        
    # –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ –∑–∞—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (GET), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    return render_template('add_resident.html')


# 6. –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@app.route('/login', methods=['GET', 'POST'])
def login():
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–æ—à–µ–ª, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    if current_user.is_authenticated:
        return redirect(url_for('index'))
        
    if request.method == 'POST':
        username = request.form.get('username')
        password = request.form.get('password')
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏
        user = User.query.filter_by(username=username).first()
        
        # –í–ê–ñ–ù–û: –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ü–†–û–í–ï–†–ö–ê –•–ï–®–ê –ü–ê–†–û–õ–Ø!
        # –ó–¥–µ—Å—å –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –º—ã –ø—Ä–æ—Å—Ç–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª–∏
        if user and user.password_hash == password:
            login_user(user) # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ
            # flash('–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å!', 'success')
            return redirect(url_for('index'))
        else:
            flash('–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å.', 'danger')
            
    return render_template('login.html')

# 6.1. –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤—ã—Ö–æ–¥–∞
@app.route('/logout')
@login_required # –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–π—Ç–∏
def logout():
    logout_user()
    # flash('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.', 'success')
    return redirect(url_for('index'))


# 7. –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == '__main__':
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–≤–∫–ª—é—á–∞—è –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É User)
        db.create_all()

        # –ù–û–í–´–ô –ö–û–î –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê
        admin_user = User.query.filter_by(username='admin').first()
        if not admin_user:
            new_admin = User(username='admin', password_hash='12345') # –ü–∞—Ä–æ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∞: 12345
            db.session.add(new_admin)
            db.session.commit()
            print("üîë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —Å–æ–∑–¥–∞–Ω —Å –ø–∞—Ä–æ–ª–µ–º '12345'!")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–≥–æ –∂–∏–ª—å—Ü–∞ –¥–ª—è —Ç–µ—Å—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        first_resident = Resident.query.filter_by(apartment_number='101').first()

        if not first_resident:
            new_resident = Resident(
                name='–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
                apartment_number='101',
                contact='+7 900 123 45 67'
            )
            db.session.add(new_resident)
            db.session.commit()
            print("üéâ –ñ–∏–ª–µ—Ü '–ò–≤–∞–Ω–æ–≤ –ò.–ò.' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
        
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!
    print("\n* –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞. –û—Ç–∫—Ä–æ–π—Ç–µ: http://127.0.0.1:5000/")
    app.run(debug=True)